(function(b,T){typeof exports=="object"&&typeof module<"u"?T(exports,require("@lookingglass/webxr-polyfill/src/api/index"),require("@lookingglass/webxr-polyfill/src/api/XRSystem"),require("@lookingglass/webxr-polyfill/src/WebXRPolyfill"),require("holoplay-core"),require("@lookingglass/webxr-polyfill/src/devices/XRDevice"),require("@lookingglass/webxr-polyfill/src/api/XRSpace"),require("gl-matrix"),require("@lookingglass/webxr-polyfill/src/api/XRWebGLLayer")):typeof define=="function"&&define.amd?define(["exports","@lookingglass/webxr-polyfill/src/api/index","@lookingglass/webxr-polyfill/src/api/XRSystem","@lookingglass/webxr-polyfill/src/WebXRPolyfill","holoplay-core","@lookingglass/webxr-polyfill/src/devices/XRDevice","@lookingglass/webxr-polyfill/src/api/XRSpace","gl-matrix","@lookingglass/webxr-polyfill/src/api/XRWebGLLayer"],T):(b=typeof globalThis<"u"?globalThis:b||self,T(b["Looking Glass WebXR"]={},b["@lookingglass/webxr-polyfill/src/api/index"],b["@lookingglass/webxr-polyfill/src/api/XRSystem"],b["@lookingglass/webxr-polyfill/src/WebXRPolyfill"],b.holoPlayCore,b["@lookingglass/webxr-polyfill/src/devices/XRDevice"],b["@lookingglass/webxr-polyfill/src/api/XRSpace"],b.glMatrix,b["@lookingglass/webxr-polyfill/src/api/XRWebGLLayer"]))})(this,function(b,T,A,K,H,$,Z,g,O){"use strict";var Be=Object.defineProperty;var Xe=(b,T,A)=>T in b?Be(b,T,{enumerable:!0,configurable:!0,writable:!0,value:A}):b[T]=A;var C=(b,T,A)=>(Xe(b,typeof T!="symbol"?T+"":T,A),A);const M=t=>t&&typeof t=="object"&&"default"in t?t:{default:t};function Q(t){if(t&&t.__esModule)return t;const n=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(t){for(const e in t)if(e!=="default"){const s=Object.getOwnPropertyDescriptor(t,e);Object.defineProperty(n,e,s.get?s:{enumerable:!0,get:()=>t[e]})}}return n.default=t,Object.freeze(n)}const q=M(T),J=M(A),ee=M(K),te=Q(H),ie=M($),ne=M(Z),ae=M(O),G=1.6;var W;(function(t){t[t.Swizzled=0]="Swizzled",t[t.Center=1]="Center",t[t.Quilt=2]="Quilt"})(W||(W={}));class se extends EventTarget{constructor(e){super();C(this,"_calibration",{configVersion:"1.0",pitch:{value:45},slope:{value:-5},center:{value:-.5},viewCone:{value:40},invView:{value:1},verticalAngle:{value:0},DPI:{value:338},screenW:{value:250},screenH:{value:250},flipImageX:{value:0},flipImageY:{value:0},flipSubp:{value:0},serial:"LKG-DEFAULT-#####"});C(this,"_viewControls",{tileHeight:512,numViews:48,trackballX:0,trackballY:0,targetX:0,targetY:G,targetZ:-.5,targetDiam:2,fovy:13/180*Math.PI,depthiness:1.25,inlineView:W.Center,capturing:!1,quiltResolution:3840,popup:null,XRSession:null,lkgCanvas:null,appCanvas:null});C(this,"LookingGlassDetected");this._viewControls={...this._viewControls,...e},this.syncCalibration()}syncCalibration(){new te.Client(e=>{if(e.devices.length<1){console.log("No Looking Glass devices found");return}e.devices.length>1&&console.log("More than one Looking Glass device found... using the first one"),this.calibration=e.devices[0].calibration})}addEventListener(e,s,i){super.addEventListener(e,s,i)}onConfigChange(){this.dispatchEvent(new Event("on-config-changed"))}get calibration(){return this._calibration}set calibration(e){this._calibration={...this._calibration,...e},this.onConfigChange()}updateViewControls(e){e!=null&&(this._viewControls={...this._viewControls,...e},this.onConfigChange())}get tileHeight(){return Math.round(this.framebufferHeight/this.quiltHeight)}get quiltResolution(){return this._viewControls.quiltResolution}set quiltResolution(e){this.updateViewControls({quiltResolution:e})}get numViews(){return this.quiltWidth*this.quiltHeight}get targetX(){return this._viewControls.targetX}set targetX(e){this.updateViewControls({targetX:e})}get targetY(){return this._viewControls.targetY}set targetY(e){this.updateViewControls({targetY:e})}get targetZ(){return this._viewControls.targetZ}set targetZ(e){this.updateViewControls({targetZ:e})}get trackballX(){return this._viewControls.trackballX}set trackballX(e){this.updateViewControls({trackballX:e})}get trackballY(){return this._viewControls.trackballY}set trackballY(e){this.updateViewControls({trackballY:e})}get targetDiam(){return this._viewControls.targetDiam}set targetDiam(e){this.updateViewControls({targetDiam:e})}get fovy(){return this._viewControls.fovy}set fovy(e){this.updateViewControls({fovy:e})}get depthiness(){return this._viewControls.depthiness}set depthiness(e){this.updateViewControls({depthiness:e})}get inlineView(){return this._viewControls.inlineView}set inlineView(e){this.updateViewControls({inlineView:e})}get capturing(){return this._viewControls.capturing}set capturing(e){this.updateViewControls({capturing:e})}get popup(){return this._viewControls.popup}set popup(e){this.updateViewControls({popup:e})}get XRSession(){return this._viewControls.XRSession}set XRSession(e){this.updateViewControls({XRSession:e})}get lkgCanvas(){return this._viewControls.lkgCanvas}set lkgCanvas(e){this.updateViewControls({lkgCanvas:e})}get appCanvas(){return this._viewControls.appCanvas}set appCanvas(e){this.updateViewControls({appCanvas:e})}get aspect(){return this._calibration.screenW.value/this._calibration.screenH.value}get tileWidth(){return Math.round(this.framebufferWidth/this.quiltWidth)}get framebufferWidth(){return this._calibration.screenW.value<7e3?this._viewControls.quiltResolution:7680}get quiltWidth(){return this.calibration.screenW.value==1536?8:this.calibration.screenW.value==3840||this.calibration.screenW.value>7e3?5:8}get quiltHeight(){return this.calibration.screenW.value==1536?6:this.calibration.screenW.value==3840||this.calibration.screenW.value>7e3?9:6}get framebufferHeight(){return this._calibration.screenW.value<7e3?this._viewControls.quiltResolution:4320}get viewCone(){return this._calibration.viewCone.value*this.depthiness/180*Math.PI}get tilt(){return this._calibration.screenH.value/(this._calibration.screenW.value*this._calibration.slope.value)*(this._calibration.flipImageX.value?-1:1)}set tilt(e){}get subp(){return 1/(this._calibration.screenW.value*3)}get pitch(){const e=this._calibration.screenW.value/this._calibration.DPI.value;return this._calibration.pitch.value*e*Math.cos(Math.atan(1/this._calibration.slope.value))}}let N=null;function L(){return N==null&&(N=new se),N}function Y(t){const n=L();t!=null&&n.updateViewControls(t)}async function re(){const t=L();if(t.appCanvas==null){console.warn("Media Capture initialized while canvas is null!");return}else{let n=function(){if(t.appCanvas!=null){let i=t.appCanvas.toDataURL();const r=document.createElement("a");r.style.display="none",r.href=i,r.download=`hologram_qs${t.quiltWidth}x${t.quiltHeight}a${t.aspect}.png`,document.body.appendChild(r),r.click(),document.body.removeChild(r),window.URL.revokeObjectURL(i)}};const e=document.getElementById("screenshotbutton");e==null||e.addEventListener("click",s);async function s(){await ce.promise(50).finally(n)}}}const oe={timeout:500},j=window.requestIdleCallback||window.requestAnimationFrame,le=window.cancelIdleCallback||window.cancelAnimationFrame,ce={request:j,cancel:le,promise:t=>new Promise(n=>j(n,Object.assign({},oe,t)))};function ue(){var n;const t=L();if(console.log(t,"for debugging purposes"),t.lkgCanvas==null)console.warn("window placement called without a valid XR Session!");else{let e=function(){let a=w.d-w.a,l=w.w-w.s;a&&l&&(a*=Math.sqrt(.5),l*=Math.sqrt(.5));const u=t.trackballX,d=t.trackballY,y=Math.cos(u)*a-Math.sin(u)*Math.cos(d)*l,k=-Math.sin(d)*l,m=-Math.sin(u)*a-Math.cos(u)*Math.cos(d)*l;t.targetX=t.targetX+y*t.targetDiam*.03,t.targetY=t.targetY+k*t.targetDiam*.03,t.targetZ=t.targetZ+m*t.targetDiam*.03,requestAnimationFrame(e)};const s=document.createElement("style");document.head.appendChild(s),(n=s.sheet)==null||n.insertRule("#LookingGlassWebXRControls * { all: revert; font-family: sans-serif }");const i=document.createElement("div");i.id="LookingGlassWebXRControls",i.className="controlsBackground";const r=document.createElement("div");i.appendChild(r),r.style.width="100%",r.style.textAlign="center",r.style.fontWeight="bold",r.style.marginBottom="8px",r.innerText="Looking Glass Controls";const o=document.createElement("button");o.style.display="block",o.style.margin="auto",o.style.width="100%",o.style.height="35px",o.style.padding="4px",o.style.marginBottom="8px",o.style.borderRadius="8px",o.id="screenshotbutton",i.appendChild(o),o.innerText="Save Hologram";const c=document.createElement("button");c.style.display="block",c.style.margin="auto",c.style.width="100%",c.style.height="35px",c.style.padding="4px",c.style.marginBottom="8px",c.style.borderRadius="8px",c.id="copybutton",i.appendChild(c),c.innerText="Copy Config",c.addEventListener("click",()=>{de(t)});const h=document.createElement("div");i.appendChild(h),h.style.width="290px",h.style.whiteSpace="normal",h.style.color="rgba(255,255,255,0.7)",h.style.fontSize="14px",h.style.margin="5px 0",h.innerHTML="Click the popup and use WASD, mouse left/right drag, and scroll.";const x=document.createElement("div");i.appendChild(x);const E=(a,l,u)=>{const d=u.stringify,y=document.createElement("div");y.style.marginBottom="8px",x.appendChild(y);const k=a,m=t[a],p=document.createElement("label");y.appendChild(p),p.innerText=u.label,p.setAttribute("for",k),p.style.width="100px",p.style.display="inline-block",p.style.textDecoration="dotted underline 1px",p.style.fontFamily='"Courier New"',p.style.fontSize="13px",p.style.fontWeight="bold",p.title=u.title;const f=document.createElement("input");y.appendChild(f),Object.assign(f,l),f.id=k,f.title=u.title,f.value=l.value!==void 0?l.value:m;const D=v=>{t[a]=v,S(v)};f.oninput=()=>{const v=l.type==="range"?parseFloat(f.value):l.type==="checkbox"?f.checked:f.value;D(v)};const P=v=>{let _=v(t[a]);u.fixRange&&(_=u.fixRange(_),f.max=Math.max(parseFloat(f.max),_).toString(),f.min=Math.min(parseFloat(f.min),_).toString()),f.value=_,D(_)};l.type==="range"&&(f.style.width="110px",f.style.height="8px",f.onwheel=v=>{P(_=>_+Math.sign(v.deltaX-v.deltaY)*l.step)});let S=v=>{};if(d){const v=document.createElement("span");v.style.fontFamily='"Courier New"',v.style.fontSize="13px",v.style.marginLeft="3px",y.appendChild(v),S=_=>{v.innerHTML=d(_)},S(m)}return P};E("fovy",{type:"range",min:1/180*Math.PI,max:120.1/180*Math.PI,step:1/180*Math.PI},{label:"fov",title:"perspective fov (degrades stereo effect)",fixRange:a=>Math.max(1/180*Math.PI,Math.min(a,120.1/180*Math.PI)),stringify:a=>{const l=a/Math.PI*180,u=Math.atan(Math.tan(a/2)*t.aspect)*2/Math.PI*180;return`${l.toFixed()}&deg;&times;${u.toFixed()}&deg;`}}),E("depthiness",{type:"range",min:0,max:2,step:.01},{label:"depthiness",title:'exaggerates depth by multiplying the width of the view cone (as reported by the firmware) - can somewhat compensate for depthiness lost using higher fov. 1.25 seems to be most physically accurate on Looking Glass 8.9".',fixRange:a=>Math.max(0,a),stringify:a=>`${a.toFixed(2)}x`}),E("inlineView",{type:"range",min:0,max:2,step:1},{label:"inline view",title:"what to show inline on the original canvas (swizzled = no overwrite)",fixRange:a=>Math.max(0,Math.min(a,2)),stringify:a=>a===0?"swizzled":a===1?"center":a===2?"quilt":"?"}),t.lkgCanvas.oncontextmenu=a=>{a.preventDefault()},t.lkgCanvas.addEventListener("wheel",a=>{const l=t.targetDiam,u=1.1,d=Math.log(l)/Math.log(u);return t.targetDiam=Math.pow(u,d+a.deltaY*.01)}),t.lkgCanvas.addEventListener("mousemove",a=>{const l=a.movementX,u=-a.movementY;if(a.buttons&2||a.buttons&1&&(a.shiftKey||a.ctrlKey)){const d=t.trackballX,y=t.trackballY,k=-Math.cos(d)*l+Math.sin(d)*Math.sin(y)*u,m=-Math.cos(y)*u,p=Math.sin(d)*l+Math.cos(d)*Math.sin(y)*u;t.targetX=t.targetX+k*t.targetDiam*.001,t.targetY=t.targetY+m*t.targetDiam*.001,t.targetZ=t.targetZ+p*t.targetDiam*.001}else a.buttons&1&&(t.trackballX=t.trackballX-l*.01,t.trackballY=t.trackballY-u*.01)});const w={w:0,a:0,s:0,d:0};return t.lkgCanvas.addEventListener("keydown",a=>{switch(a.code){case"KeyW":w.w=1;break;case"KeyA":w.a=1;break;case"KeyS":w.s=1;break;case"KeyD":w.d=1;break}}),t.lkgCanvas.addEventListener("keyup",a=>{switch(a.code){case"KeyW":w.w=0;break;case"KeyA":w.a=0;break;case"KeyS":w.s=0;break;case"KeyD":w.d=0;break}}),requestAnimationFrame(e),setTimeout(()=>{re()},1e3),i}}function de(t){let n=t.targetX,e=t.targetY,s=t.targetZ,i=`${Math.round(t.fovy/Math.PI*180)} * Math.PI / 180`,r=t.targetDiam,o=t.trackballX,c=t.trackballY,h=t.depthiness;const x={targetX:n,targetY:e,targetZ:s,fovy:i,targetDiam:r,trackballX:o,trackballY:c,depthiness:h};let E=JSON.stringify(x,null,4);navigator.clipboard.writeText(E)}let X;const fe=(t,n)=>{const e=L();if(e.lkgCanvas==null){console.warn("window placement called without a valid XR Session!");return}else if(t==!1)pe(e,X);else{X==null&&(X=ue()),e.lkgCanvas.style.position="fixed",e.lkgCanvas.style.bottom="0",e.lkgCanvas.style.left="0",e.lkgCanvas.width=e.calibration.screenW.value,e.lkgCanvas.height=e.calibration.screenH.value,document.body.appendChild(X);const s="getScreenDetails"in window;console.log(s,"Screen placement API exists"),s?he(e.lkgCanvas,e,n):z(e,e.lkgCanvas,n)}};async function he(t,n,e){const s=await window.getScreenDetails();console.log(s);const i=s.screens.filter(r=>r.label.includes("LKG"))[0];if(console.log(i,"monitors"),i===void 0){console.log("no Looking Glass monitor detected - manually opening popup window"),z(n,t,e);return}else{console.log("monitor ID",i.label,"serial number",n.calibration);const r=[`left=${i.left}`,`top=${i.top}`,`width=${i.width}`,`height=${i.height}`,"menubar=no","toolbar=no","location=no","status=no","resizable=yes","scrollbars=no","fullscreenEnabled=true"].join(",");n.popup=window.open("","new",r),n.popup&&(n.popup.document.body.style.background="black",n.popup.document.body.appendChild(t),console.assert(e),n.popup.onbeforeunload=e)}}function z(t,n,e){t.popup=window.open("",void 0,"width=640,height=360"),t.popup&&(t.popup.document.title="Looking Glass Window (fullscreen me on Looking Glass!)",t.popup.document.body.style.background="black",t.popup.document.body.appendChild(n),console.assert(e),t.popup.onbeforeunload=e)}function pe(t,n){var e;(e=n.parentElement)==null||e.removeChild(n),t.popup&&(t.popup.onbeforeunload=null,t.popup.close(),t.popup=null)}const F=Symbol("LookingGlassXRWebGLLayer");class me extends ae.default{constructor(n,e,s){super(n,e,s);const i=L();i.appCanvas=e.canvas,i.lkgCanvas=document.createElement("canvas"),i.lkgCanvas.tabIndex=0;const r=i.lkgCanvas.getContext("2d",{alpha:!1});i.lkgCanvas.addEventListener("dblclick",function(){this.requestFullscreen()});const o=this[O.PRIVATE].config,c=e.createTexture();let h,x;const E=e.createFramebuffer(),w=e.enable.bind(e),a=e.disable.bind(e),l=e.getExtension("OES_vertex_array_object"),u=34229,d=l?l.bindVertexArrayOES.bind(l):e.bindVertexArray.bind(e);(o.depth||o.stencil)&&(o.depth&&o.stencil?x={format:e.DEPTH_STENCIL,attachment:e.DEPTH_STENCIL_ATTACHMENT}:o.depth?x={format:e.DEPTH_COMPONENT16,attachment:e.DEPTH_ATTACHMENT}:o.stencil&&(x={format:e.STENCIL_INDEX8,attachment:e.STENCIL_ATTACHMENT}),h=e.createRenderbuffer());const y=()=>{const R=e.getParameter(e.TEXTURE_BINDING_2D);if(e.bindTexture(e.TEXTURE_2D,c),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,i.framebufferWidth,i.framebufferHeight,0,e.RGBA,e.UNSIGNED_BYTE,null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR),e.bindTexture(e.TEXTURE_2D,R),h){const I=e.getParameter(e.RENDERBUFFER_BINDING);e.bindRenderbuffer(e.RENDERBUFFER,h),e.renderbufferStorage(e.RENDERBUFFER,x.format,i.framebufferWidth,i.framebufferHeight),e.bindRenderbuffer(e.RENDERBUFFER,I)}};y(),i.addEventListener("on-config-changed",y);const k=e.getParameter(e.FRAMEBUFFER_BINDING);e.bindFramebuffer(e.FRAMEBUFFER,E),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,c,0),(o.depth||o.stencil)&&e.framebufferRenderbuffer(e.FRAMEBUFFER,x.attachment,e.RENDERBUFFER,h),e.bindFramebuffer(e.FRAMEBUFFER,k);const m=e.createProgram(),p=e.createShader(e.VERTEX_SHADER),f=e.createShader(e.FRAGMENT_SHADER);if(m===null||p===null||f===null){console.error("there was a problem with shader construction");return}e.attachShader(m,p),e.attachShader(m,f);{const R=`
       attribute vec2 a_position;
       varying vec2 v_texcoord;
       void main() {
         gl_Position = vec4(a_position * 2.0 - 1.0, 0.0, 1.0);
         v_texcoord = a_position;
       }
     `;e.shaderSource(p,R),e.compileShader(p),e.getShaderParameter(p,e.COMPILE_STATUS)||console.warn(e.getShaderInfoLog(p))}let D,P,S;const v=()=>{const R=H.Shader(i);if(R===D)return;if(D=R,e.shaderSource(f,R),e.compileShader(f),!e.getShaderParameter(f,e.COMPILE_STATUS)){console.warn(e.getShaderInfoLog(f));return}if(e.linkProgram(m),!e.getProgramParameter(m,e.LINK_STATUS)){console.warn(e.getProgramInfoLog(m));return}P=e.getAttribLocation(m,"a_position"),S=e.getUniformLocation(m,"u_viewType");const I=e.getUniformLocation(m,"u_texture"),B=e.getParameter(e.CURRENT_PROGRAM);e.useProgram(m),e.uniform1i(I,0),e.useProgram(B)};i.addEventListener("on-config-changed",v);const _=l?l.createVertexArrayOES():e.createVertexArray(),Re=e.createBuffer(),Te=e.getParameter(e.ARRAY_BUFFER_BINDING),_e=e.getParameter(u);d(_),e.bindBuffer(e.ARRAY_BUFFER,Re),e.bufferData(e.ARRAY_BUFFER,new Float32Array([0,0,1,0,0,1,0,1,1,0,1,1]),e.STATIC_DRAW),e.enableVertexAttribArray(P),e.vertexAttribPointer(P,2,e.FLOAT,!1,0,0),d(_e),e.bindBuffer(e.ARRAY_BUFFER,Te);const Le=()=>{console.assert(this[F].LookingGlassEnabled),e.bindFramebuffer(e.FRAMEBUFFER,this.framebuffer);const R=e.getParameter(e.COLOR_CLEAR_VALUE),I=e.getParameter(e.DEPTH_CLEAR_VALUE),B=e.getParameter(e.STENCIL_CLEAR_VALUE);e.clearColor(0,0,0,0),e.clearDepth(1),e.clearStencil(0),e.clear(e.DEPTH_BUFFER_BIT|e.COLOR_BUFFER_BIT|e.STENCIL_BUFFER_BIT),e.clearColor(R[0],R[1],R[2],R[3]),e.clearDepth(I),e.clearStencil(B)},ke=()=>{if(!this[F].LookingGlassEnabled||i.appCanvas==null||i.lkgCanvas==null)return;(i.appCanvas.width!==i.framebufferWidth||i.appCanvas.height!==i.framebufferHeight)&&(i.appCanvas.width,i.appCanvas.height,i.appCanvas.width=i.framebufferWidth,i.appCanvas.height=i.framebufferHeight);const R=e.getParameter(u),I=e.getParameter(e.CULL_FACE),B=e.getParameter(e.BLEND),xe=e.getParameter(e.DEPTH_TEST),Se=e.getParameter(e.STENCIL_TEST),Pe=e.getParameter(e.SCISSOR_TEST),V=e.getParameter(e.VIEWPORT),Fe=e.getParameter(e.FRAMEBUFFER_BINDING),De=e.getParameter(e.RENDERBUFFER_BINDING),Ae=e.getParameter(e.CURRENT_PROGRAM),Ie=e.getParameter(e.ACTIVE_TEXTURE);{const Me=e.getParameter(e.TEXTURE_BINDING_2D);e.bindFramebuffer(e.FRAMEBUFFER,null),e.useProgram(m),d(_),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,c),e.disable(e.BLEND),e.disable(e.CULL_FACE),e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.viewport(0,0,e.drawingBufferWidth,e.drawingBufferHeight),e.uniform1i(S,0),e.drawArrays(e.TRIANGLES,0,6),r==null||r.clearRect(0,0,i.lkgCanvas.width,i.lkgCanvas.height),r==null||r.drawImage(i.appCanvas,0,0,i.framebufferWidth,i.framebufferHeight,0,0,i.calibration.screenW.value,i.calibration.screenH.value),i.inlineView!==0&&(i.capturing&&i.appCanvas.width!==i.framebufferWidth&&(i.appCanvas.width=i.framebufferWidth,i.appCanvas.height=i.framebufferHeight,e.viewport(0,0,i.framebufferHeight,i.framebufferWidth)),e.uniform1i(S,i.inlineView),e.drawArrays(e.TRIANGLES,0,6)),e.bindTexture(e.TEXTURE_2D,Me)}e.activeTexture(Ie),e.useProgram(Ae),e.bindRenderbuffer(e.RENDERBUFFER,De),e.bindFramebuffer(e.FRAMEBUFFER,Fe),e.viewport(V[0],V[1],V[2],V[3]),(Pe?w:a)(e.SCISSOR_TEST),(Se?w:a)(e.STENCIL_TEST),(xe?w:a)(e.DEPTH_TEST),(B?w:a)(e.BLEND),(I?w:a)(e.CULL_FACE),d(R)};window.addEventListener("unload",()=>{i.popup&&i.popup.close(),i.popup=null}),v(),this[F]={LookingGlassEnabled:!1,framebuffer:E,clearFramebuffer:Le,blitTextureToDefaultFramebufferIfNeeded:ke,moveCanvasToWindow:fe}}get framebuffer(){return this[F].LookingGlassEnabled?this[F].framebuffer:null}get framebufferWidth(){return L().framebufferWidth}get framebufferHeight(){return L().framebufferHeight}}class be extends ie.default{constructor(n){super(n),this.sessions=new Map,this.viewSpaces=[],this.basePoseMatrix=g.mat4.create(),this.inlineProjectionMatrix=g.mat4.create(),this.inlineInverseViewMatrix=g.mat4.create(),this.LookingGlassProjectionMatrices=[],this.LookingGlassInverseViewMatrices=[]}onBaseLayerSet(n,e){const s=this.sessions.get(n);s.baseLayer=e;const i=L(),r=e[F];r.LookingGlassEnabled=s.immersive,s.immersive&&(i.XRSession=this.sessions.get(n),i.popup==null?r.moveCanvasToWindow(!0,()=>{this.endSession(n)}):console.warn("attempted to assign baselayer twice?"))}isSessionSupported(n){return n==="inline"||n==="immersive-vr"}isFeatureSupported(n){switch(n){case"viewer":return!0;case"local":return!0;case"local-floor":return!0;case"bounded-floor":return!1;case"unbounded":return!1;default:return console.warn("LookingGlassXRDevice.isFeatureSupported: feature not understood:",n),!1}}async requestSession(n,e){if(!this.isSessionSupported(n))return Promise.reject();const s=n!=="inline",i=new we(n,e);return this.sessions.set(i.id,i),s&&this.dispatchEvent("@@webxr-polyfill/vr-present-start",i.id),Promise.resolve(i.id)}requestAnimationFrame(n){return this.global.requestAnimationFrame(n)}cancelAnimationFrame(n){this.global.cancelAnimationFrame(n)}onFrameStart(n,e){const s=this.sessions.get(n),i=L();if(s.immersive){const r=Math.tan(.5*i.fovy),o=.5*i.targetDiam/r,c=o-i.targetDiam,h=this.basePoseMatrix;g.mat4.fromTranslation(h,[i.targetX,i.targetY,i.targetZ]),g.mat4.rotate(h,h,i.trackballX,[0,1,0]),g.mat4.rotate(h,h,-i.trackballY,[1,0,0]),g.mat4.translate(h,h,[0,0,o]);for(let E=0;E<i.numViews;++E){const w=(E+.5)/i.numViews-.5,a=Math.tan(i.viewCone*w),l=o*a,u=this.LookingGlassInverseViewMatrices[E]=this.LookingGlassInverseViewMatrices[E]||g.mat4.create();g.mat4.translate(u,h,[l,0,0]),g.mat4.invert(u,u);const d=Math.max(c+e.depthNear,.01),y=c+e.depthFar,k=d*r,m=k,p=-k,f=d*-a,D=i.aspect*k,P=f+D,S=f-D,v=this.LookingGlassProjectionMatrices[E]=this.LookingGlassProjectionMatrices[E]||g.mat4.create();g.mat4.set(v,2*d/(P-S),0,0,0,0,2*d/(m-p),0,0,(P+S)/(P-S),(m+p)/(m-p),-(y+d)/(y-d),-1,0,0,-2*y*d/(y-d),0)}s.baseLayer[F].clearFramebuffer()}else{const r=s.baseLayer.context,o=r.drawingBufferWidth/r.drawingBufferHeight;g.mat4.perspective(this.inlineProjectionMatrix,e.inlineVerticalFieldOfView,o,e.depthNear,e.depthFar),g.mat4.fromTranslation(this.basePoseMatrix,[0,G,0]),g.mat4.invert(this.inlineInverseViewMatrix,this.basePoseMatrix)}}onFrameEnd(n){this.sessions.get(n).baseLayer[F].blitTextureToDefaultFramebufferIfNeeded()}async requestFrameOfReferenceTransform(n,e){const s=g.mat4.create();switch(n){case"viewer":case"local":return g.mat4.fromTranslation(s,[0,-G,0]),s;case"local-floor":return s;default:throw new Error("XRReferenceSpaceType not understood")}}endSession(n){const e=this.sessions.get(n);e.immersive&&e.baseLayer&&(e.baseLayer[F].moveCanvasToWindow(!1),this.dispatchEvent("@@webxr-polyfill/vr-present-end",n)),e.ended=!0}doesSessionSupportReferenceSpace(n,e){const s=this.sessions.get(n);return s.ended?!1:s.enabledFeatures.has(e)}getViewSpaces(n){if(n==="immersive-vr"){const e=L();for(let s=this.viewSpaces.length;s<e.numViews;++s)this.viewSpaces[s]=new ge(s);return this.viewSpaces.length=e.numViews,this.viewSpaces}}getViewport(n,e,s,i,r){if(r===void 0){const c=this.sessions.get(n).baseLayer.context;i.x=0,i.y=0,i.width=c.drawingBufferWidth,i.height=c.drawingBufferHeight}else{const o=L(),c=r%o.quiltWidth,h=Math.floor(r/o.quiltWidth);i.x=o.framebufferWidth/o.quiltWidth*c,i.y=o.framebufferHeight/o.quiltHeight*h,i.width=o.framebufferWidth/o.quiltWidth,i.height=o.framebufferHeight/o.quiltHeight}return!0}getProjectionMatrix(n,e){return e===void 0?this.inlineProjectionMatrix:this.LookingGlassProjectionMatrices[e]||g.mat4.create()}getBasePoseMatrix(){return this.basePoseMatrix}getBaseViewMatrix(){return this.inlineInverseViewMatrix}_getViewMatrixByIndex(n){return this.LookingGlassInverseViewMatrices[n]=this.LookingGlassInverseViewMatrices[n]||g.mat4.create()}getInputSources(){return[]}getInputPose(n,e,s){return null}onWindowResize(){}}let ve=0;class we{constructor(n,e){C(this,"mode");C(this,"immersive");C(this,"id");C(this,"baseLayer");C(this,"inlineVerticalFieldOfView");C(this,"ended");C(this,"enabledFeatures");this.mode=n,this.immersive=n==="immersive-vr"||n==="immersive-ar",this.id=++ve,this.baseLayer=null,this.inlineVerticalFieldOfView=Math.PI*.5,this.ended=!1,this.enabledFeatures=e}}class ge extends ne.default{constructor(e){super();C(this,"viewIndex");this.viewIndex=e}get eye(){return"none"}_onPoseUpdate(e){this._inverseBaseMatrix=e._getViewMatrixByIndex(this.viewIndex)}}class U extends ee.default{constructor(e){super();C(this,"vrButton");C(this,"device");C(this,"isPresenting",!1);Y(e),this.loadPolyfill()}static async init(e){new U(e)}async loadPolyfill(){this.overrideDefaultVRButton(),console.warn('Looking Glass WebXR "polyfill" overriding native WebXR API.');for(const e in q.default)this.global[e]=q.default[e];this.global.XRWebGLLayer=me,this.injected=!0,this.device=new be(this.global),this.xr=new J.default(Promise.resolve(this.device)),Object.defineProperty(this.global.navigator,"xr",{value:this.xr,configurable:!0})}async overrideDefaultVRButton(){this.vrButton=await ye("VRButton"),this.vrButton&&this.device&&(this.device.addEventListener("@@webxr-polyfill/vr-present-start",()=>{this.isPresenting=!0,this.updateVRButtonUI()}),this.device.addEventListener("@@webxr-polyfill/vr-present-end",()=>{this.isPresenting=!1,this.updateVRButtonUI()}),this.vrButton.addEventListener("click",e=>{this.updateVRButtonUI()}),this.updateVRButtonUI())}async updateVRButtonUI(){if(this.vrButton){await Ee(100),this.isPresenting?this.vrButton.innerHTML="EXIT LOOKING GLASS":this.vrButton.innerHTML="ENTER LOOKING GLASS";const e=220;this.vrButton.style.width=`${e}px`,this.vrButton.style.left=`calc(50% - ${e/2}px)`}}update(e){Y(e)}}async function ye(t){return new Promise((n,e)=>{const s=new MutationObserver(function(i){i.forEach(function(r){r.addedNodes.forEach(function(o){const c=o;c.id==t&&(n(c),s.disconnect())})})});s.observe(document.body,{subtree:!1,childList:!0}),setTimeout(()=>{s.disconnect(),e(`id:${t} not found`)},5e3)})}function Ee(t){return new Promise(n=>setTimeout(n,t))}const Ce=L();b.LookingGlassConfig=Ce,b.LookingGlassWebXRPolyfill=U,Object.defineProperties(b,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
